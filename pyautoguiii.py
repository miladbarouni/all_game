
import pyautogui as py
import random
import time

confirmation_rulls_game = 0
confirmation_details = 0
number_played_games = 0

all_bot_name = ['Milad', 'Misaq', 'Abas', 'Mohammad', 'Aida', 'Neda', 'Sepideh', 'Mahsa'] 
action = ['‚úä', '‚úã', '‚úåÔ∏è']
user_1 = 0
user_2 = 0
bot_1 = 0
bot_2 = 0
number_played_Rock_Paper_Scissors = 0

welcome_panel = py.confirm(text='              Welcome to the game, before playing \nplease read both of the "Rulls" game and "Details" to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])

while confirmation_rulls_game < 1 or confirmation_details < 1 :

    if welcome_panel == 'Menu game' :
        alert_before_welcome_panel = py.alert(text='You have not read "Rulls game" and "Details" \nplease read and then click on Menu game', title='Welcome panel')
        welcome_panel = py.confirm(text='please read both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
    elif welcome_panel == 'Rulls game' :
        rulls_game_panel = py.confirm(text='Rull of the game: \n1. Playing the games means you have accepted the complete rules of the game \n2. When your opponent is a robot, his movement is chosen by chance and you have to accept the result \n3. If you make a change in the source code of the game, this is cheating and you will lose the game \n4. During the game, two users should not show each other their next move to the opponent \n5. If you quit the game, your opponent will win the game \n6.this version of game is free so you can play just 2 games \n7.for buying full version check "Details" to see communication ways', title='Rulls game panel', buttons=['I agree', 'I dont agree'])
        if rulls_game_panel == 'I agree' :
            confirmation_rulls_game += 1
            welcome_panel = py.confirm(text='Thanks for reading "Rulls" game \nif you dont read "Details" game yet \nread and click on Menu game to start', title='Rulls game panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
        elif rulls_game_panel == 'I dont agree' :
            quit_panel = py.confirm(text='If you want to play read the "Rulls" and "Details" \nIf you dont agree quit the game and click on Exit', title='Rulls game panel', buttons=['Back', 'Exit'])
            if quit_panel == 'Back' :
                welcome_panel = py.confirm(text='Welcome to the game, before play please read \n     both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
            else :
                quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
                if quit_panel == 'No' :
                    welcome_panel = py.confirm(text='Welcome to the game, before play please read \n     both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
                else :
                    quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                    break
    elif welcome_panel == 'Details' :
        confirmation_details += 1
        details_game_panel = py.alert(text='This package game produced by Milad Barouni \nBuying and the Ways of communication : \nby Email : milad.baroun@gmail.com \nPhone number : +989177719601', title='Details panel')
        welcome_panel = py.confirm(text='Thanks for reading "details" game \nif you dont read "rulls" game yet \nread and click on Menu game to start', title='Details game panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
    else :
        quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
        if quit_panel == 'No' :
            welcome_panel = py.confirm(text='Welcome to the game, before play please read \n     both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
        else :
            quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break
else :
    welcome_panel = py.confirm(text='Thanks for reading', title='Welcome panel', buttons=['Menu game', 'Set password', 'Exit'])
    while welcome_panel == 'Exit' :
        quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
        if quit_panel == 'No' :
            welcome_panel = py.confirm(text='Thanks for reading', title='Welcome panel', buttons=['Menu game', 'Set password', 'Exit'])
        else :
            quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break
    if welcome_panel == 'Set password' :
        password_login = py.prompt(text='Enter your password', title='Password panel')
        password_login_repeat = py.prompt(text='Repeat enter your password', title='Password panel')
        while password_login != password_login_repeat :
            password_login = py.prompt(text='Your password not same enter again', title='Password panel')
            password_login_repeat = py.prompt(text='Repeat enter your password', title='Password panel')

        password_login_input = py.prompt(text='         Your password is set \nTo continue enter your password', title='Password panel')
        password_wrong = 0

        while password_login != password_login_input :
            password_wrong += 1
            if password_wrong < 3 :
                password_login_input = py.prompt(text='      Wrong password \nEnter your password again', title='Password panel')
            else :
                quit_panel = py.alert(text='You entered wrong password 3 times \n        We wish see you later again', title='Quit panel')
                break
        else :
            welcome_panel = py.confirm(text='You logged in', title='Welcome panel', buttons=['Menu game', 'Exit'])
            while welcome_panel == 'Exit' :
                quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
                if quit_panel == 'No' :
                    welcome_panel = py.confirm(text='Thanks for set your password', title='Welcome panel', buttons=['Menu game', 'Exit'])
                else :
                    quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                    break
               
username = py.prompt(text='First enter your name please', title='Name panel') 
while not username :                                                                                                    
        canceling = py.confirm(text='An error has occurred, this error may be due to exiting the program or due to not entering the name', title='Unknow error panel', buttons=['Enter a name', 'Exit'])
        if canceling == 'Enter a name' :
            username = py.prompt(text='First enter your name please', title='Name panel')
        else :
            canceling_2 = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break    
else :
    thanks_user = py.alert(text=f'click "Ok" to start the game', title=f'{username} panel')

number_played_games = 0

menu_game_panel = py.confirm(text=f'{username} Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
while number_played_games < 2 : 

    if menu_game_panel == 'Change username' :
        username = py.prompt(text=f'{username} Enter your new username please', title='New username panel') 
        while not username :                                                                                                    
            canceling = py.confirm(text='An error has occurred, this error may be due to exiting the program or due to not entering the name', title='Unknow error panel', buttons=['Enter a name', 'Exit'])
            if canceling == 'Enter a name' :
                username = py.prompt(text=f'{username} Enter your new name please', title='New name panel') 
            else :
                canceling_2 = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break    
        else :
            menu_game_panel = py.confirm(text=f'{username} Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

    elif menu_game_panel == '‚úä_‚úã_‚úåÔ∏è' :
        number_played_games += 1
        welcome_Rock_Paper_Scissors_panel = py.confirm(text='Welcome to ‚úä_‚úã_‚úåÔ∏è game, ready to start ?', title='Welcome ‚úä_‚úã_‚úåÔ∏è panel ', buttons=['Yes', 'No'])
        while welcome_Rock_Paper_Scissors_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_Rock_Paper_Scissors_panel = py.confirm(text='Welcome to ‚úä_‚úã_‚úåÔ∏è game, Are you ready to start ?', title='Welcome ‚úä_‚úã_‚úåÔ∏è panel ', buttons=['Yes', 'No'])
            else :
                canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        else:
            which_game_Rock_Paper_Scissors = py.confirm(text='which game do you want ?', title='select game panel', buttons=['üë´ - üëΩ', 'üëΩ - üëΩ', 'üë´ - üë´', 'Exit'])

        round_number = int(py.prompt(text='How many round do you want to play ?', title='round panel', default='How many round'))
        How_determine_winner = py.confirm(text='How to determine the winner ?', title='Determine panel', buttons=['Whoever reaches the entry number', 'Only play the entry number'])
        if which_game_Rock_Paper_Scissors == 'üë´ - üëΩ' :
            random_bot_name_1 = random.choice(all_bot_name)
            bot_name = py.alert(text=f'Robot name is {random_bot_name_1}', title='üë´ - üëΩ panel')
            if How_determine_winner == 'Whoever reaches the entry number' :
                while user_1 < round_number and bot_1 < round_number :
                    random_action = random.choice(action)
                    which_game = py.confirm(text=f'{username} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    number_played_Rock_Paper_Scissors += 1
                    if which_game == random_action :
                        user_1 += 1
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    elif ( which_game == '‚úã' and random_action == '‚úä' ) or ( which_game == '‚úä' and random_action == '‚úåÔ∏è' ) or ( which_game == '‚úåÔ∏è' and random_action == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You win \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    else :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You lose \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                
                if user_1 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_1 == round_number  and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} get max score üëø \nYou lose all round üò®', title='Finally result')
                else :
                    if user_1 > bot_1 :
                        finally_resualt = py.alert(text=f'{username} you win the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username} you lose the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'{username} the game is equal, Full resualt : {user_1} - {bot_1}', title='Finally result')
                                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


            else :
                while number_played_Rock_Paper_Scissors < round_number :
                    which_game = py.confirm(text=f'{username} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    random_action = random.choice(action)
                    number_played_Rock_Paper_Scissors += 1
                    if which_game == random_action :
                        user_1 += 1
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    elif ( which_game == '‚úã' and random_action == '‚úä' ) or ( which_game == '‚úä' and random_action == '‚úåÔ∏è' ) or ( which_game == '‚úåÔ∏è' and random_action == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You win \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    else :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You lose \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                
                if user_1 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_1 == round_number and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} get max score üëø \nYou lose all round üò®', title='Finally result')
                else :
                    if user_1 > bot_1 :
                        finally_resualt = py.alert(text=f'{username} you win the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username} you lose the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'{username} the game is equal, Full resualt : {user_1} - {bot_1}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

        elif which_game_Rock_Paper_Scissors == 'üë´ - üë´' :  
            username_1 = py.prompt(text='enter the first name player please', title='Name panel', default='first name player')
            username_2 = py.prompt(text='enter the second name player please', title='Name panel', default='second name player')
            if How_determine_winner == 'Whoever reaches the entry number' :
                while user_1 < round_number and user_2 < round_number :
                    which_game_1 = py.confirm(text=f'{username_1} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    which_game_2 = py.confirm(text=f'{username_2} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    number_played_Rock_Paper_Scissors += 1
                    if which_game_1 == which_game_2 :
                        user_1 += 1
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1}  \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    elif ( which_game_1 == '‚úã' and which_game_2 == '‚úä' ) or ( which_game_1 == '‚úä' and which_game_2 == '‚úåÔ∏è' ) or ( which_game_1 == '‚úåÔ∏è' and which_game_2 == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_1} win \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1} \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    else :
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_2} win \n{username_2} selected {which_game_2} \n{username_1} selected {which_game_1} \n{username_2} {user_2} \n{username_1} {user_1}', title='üë´ - üë´ panel')

                if user_1 == round_number and user_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_1} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif user_2 == round_number and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_2} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if user_1 > user_2 :
                        finally_resualt = py.alert(text=f'{username_1} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username_2} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {user_1} - {user_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

            else :
                while number_played_Rock_Paper_Scissors < round_number :
                    which_game_1 = py.confirm(text=f'{username_1} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    which_game_2 = py.confirm(text=f'{username_2} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    number_played_Rock_Paper_Scissors += 1
                    if which_game_1 == which_game_2 :
                        user_1 += 1
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1}  \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    elif ( which_game_1 == '‚úã' and which_game_2 == '‚úä' ) or ( which_game_1 == '‚úä' and which_game_2 == '‚úåÔ∏è' ) or ( which_game_1 == '‚úåÔ∏è' and which_game_2 == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_1} win \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1} \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    else :
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_2} win \n{username_2} selected {which_game_2} \n{username_1} selected {which_game_1} \n{username_2} {user_2} \n{username_1} {user_1}', title='üë´ - üë´ panel')

                if user_1 == round_number and user_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_1} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif user_2 == round_number and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_2} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if user_1 > user_2 :
                        finally_resualt = py.alert(text=f'{username_1} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username_2} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {user_1} - {user_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


        elif which_game_Rock_Paper_Scissors == 'üëΩ - üëΩ' :
            random_bot_name_1 = random.choice(all_bot_name)
            bot_name_1 = py.alert(text=f'First Robot name is {random_bot_name_1}', title='üëΩ - üëΩ panel')
            random_bot_name_2 = random.choice(all_bot_name)

            while random_bot_name_1 == random_bot_name_2 :
                random_bot_name_2 = random.choice(all_bot_name)
          
            bot_name_2 = py.alert(text=f'Second Robot name is {random_bot_name_2}', title='üëΩ - üëΩ panel')

            if How_determine_winner == 'Whoever reaches the entry number' :
                while bot_1 < round_number and bot_2 < round_number :
                    random_action_1 = random.choice(action)
                    random_action_2 = random.choice(action)
                    number_played_Rock_Paper_Scissors += 1
                    if random_action_1 == random_action_2 :
                        bot_1 += 1
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n{random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    elif ( random_action_1 == '‚úã' and random_action_2 == '‚úä' ) or ( random_action_1 == '‚úä' and random_action_2 == '‚úåÔ∏è' ) or ( random_action_1 == '‚úåÔ∏è' and random_action_2 == '‚úã' ) :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_1} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n{random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    else :
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_2} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n{random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                if bot_1 == round_number and bot_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_2 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_2} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if bot_1 > bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_1} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    elif bot_1 < bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_2} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

            else :
                while number_played_Rock_Paper_Scissors < round_number :
                    random_action_1 = random.choice(action)
                    random_action_2 = random.choice(action)
                    number_played_Rock_Paper_Scissors += 1
                    if random_action_1 == random_action_2 :
                        bot_1 += 1
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n {random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    elif ( random_action_1 == '‚úã' and random_action_2 == '‚úä' ) or ( random_action_1 == '‚úä' and random_action_2 == '‚úåÔ∏è' ) or ( random_action_1 == '‚úåÔ∏è' and random_action_2 == '‚úã' ) :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_1} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n {random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    else :
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_2} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n {random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                if bot_1 == round_number and bot_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_2 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_2} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if bot_1 > bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_1} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    elif bot_1 < bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_2} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


    elif menu_game_panel == 'Guess_number' :
        number_played_games += 1
        rounds = 1
        len_str_number = ''

        how_many_len = int(py.prompt(text='Welcome to Guess number \nHow many digits is the selected number ?', title='Entery len number'))

        while how_many_len > 5 :
            how_many_len = int(py.prompt(text='Your digits number must be lower than 5 ,enter digits the number again ?', title='Entery len number'))

        how_many_round = int(py.prompt(text='How many rounds do you want to try your luck ?', title='Entery round number'))

        for i in range(how_many_len) :
            len_str_number += '9'
            len_int_number = int(len_str_number)

        random_number = random.randint(1, len_int_number + 1)

        entry_random_number = int(py.prompt(text=f'guess and enter your random number', title='Entery random number'))

        while rounds < how_many_round :
            rounds += 1
            if entry_random_number == random_number :
                entry_random_number = py.alert(text=f'üíØüíØüíØ great üíØüíØüíØ \n{entry_random_number} is the currect number', title='Win panel')
                win_alert = py.alert(text=f'congratulations, you win the game in {rounds - 1} rounds ', title='Win panel')
                break
            elif entry_random_number > random_number :
                entry_random_number = int(py.prompt(text=f'{entry_random_number} is bigger than real number \nguess again and enter another number \nRound {rounds}/{how_many_round}, ', title='Entery random number'))
            else : 
                entry_random_number = int(py.prompt(text=f'{entry_random_number} is lower than real number \nguess again and enter another number \nRound {rounds}/{how_many_round}', title='Entery random number'))
        else: 
            lose_alert = py.alert(text=f'Your chance is finished \nyou lose the game \nComputer number was {random_number}', title='Lose panel')

        menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

    elif menu_game_panel == 'Gol_ya_Pooch' :   
        number_played_games += 1
        user_gol_ya_pooch = 0
        bot_gol_ya_pooch = 0
        name_box = ['Box 1', 'Box 2']
        welcome_panel = py.confirm(text='Welcome to Gol_ya_Pooch game, Are you ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
        while welcome_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_panel = py.confirm(text='Welcome to Gol_ya_Pooch game, Are you ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
            else :
                canceling_2 = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        
        how_many_round = int(py.prompt(text='How many rounds do you want to try your luck ?', title='Entery round number'))
        round_game_played = 0
        while round_game_played < how_many_round : 
            random_name_box = random.choice(name_box)
            Gol_ya_Pooch_panel = py.confirm(text='Select one of the box ?', title='Gol_ya_Pooch panel', buttons=['Box 1', 'Box 2'])

            round_game_played += 1
            if Gol_ya_Pooch_panel == random_name_box :
                resualt_Gol_ya_Pooch_game = py.alert(text=f'round {round_game_played}/{how_many_round} , Resualt : You win', title='Gol_ya_Pooch panel')
                user_gol_ya_pooch += 1
            else :
                resualt_Gol_ya_Pooch_game = py.alert(text=f'round {round_game_played}/{how_many_round} , Resualt : You lose', title='Gol_ya_Pooch panel')
                bot_gol_ya_pooch += 1

        all_result_gol_ya_pooch = py.alert(text=f'All result : \n{username} {user_gol_ya_pooch} \nRobot {bot_gol_ya_pooch}', title='Result panel')

        menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


    
    elif menu_game_panel == 'Jorat_Haghighat' :
        number_played_games += 1
        round_game_played = 0
        jorat_list = ['Kole direct inestat ro neshon bede', 'Dad bezan bego man divoonam', 'Be sorat random be yeki az mokhatabat zang bezan bego dooset daram', 'Ye sandewich be hesab khodet sefaresh bede', 'Az inja ta park tv piade boro', 'Ye music ke doos dari ba sedaye boland bekhon']
        haghighat_list = ['Chandbar ashegh shodi ?', 'Bozorg tarin razet chie ?', 'Ajibtarin adati ke dari chie ?', 'Age ye rooz omr koni chi kar tooye on rooz mikoni ?', 'Age mitonesi chizi ro toye sooratet taghir bedi chi bood ?']

        welcome_Jorat_Haghighat_panel = py.confirm(text='Welcome to Jorat_Haghighat game, Ready to start üëÄ ?', title='Welcome panel', buttons=['Yes', 'No'])
        while welcome_Jorat_Haghighat_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_Jorat_Haghighat_panel = py.confirm(text='Welcome to Jorat_Haghighat game, Ready to start üëÄ ?', title='Welcome panel', buttons=['Yes', 'No'])
            else :
                canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        else:
            username_1 = py.prompt(text='enter the first name please please', title='Name panel', default='first name player')
            username_2 = py.prompt(text='enter the second name player please', title='Name panel', default='second name player')
            how_many_round = int(py.prompt(text='How many rounds do you want to play ?', title='Entery round number'))
            while round_game_played < how_many_round :
                round_game_played += 1
                welcome_Jorat_Haghighat_panel = py.confirm(text=f'{username_1} Select one of the box', title='Jorat_Haghighat panel', buttons=['Jorat', 'Haghighat'])
                if welcome_Jorat_Haghighat_panel == 'Jorat' :
                    random_jorat_input = random.choice(jorat_list)
                    jorat_resualt = py.alert(text=f'{random_jorat_input}', title='Jorat action')
                else :
                    random_haghighat_input = random.choice(haghighat_list)
                    haghighat_resualt = py.alert(text=f'{random_haghighat_input}', title='Haghighat action')

                welcome_Jorat_Haghighat_panel = py.confirm(text=f'{username_2} Select one of the box', title='Jorat_Haghighat panel', buttons=['Jorat', 'Haghighat'])
                if welcome_Jorat_Haghighat_panel == 'Jorat' :
                    random_jorat_input = random.choice(jorat_list)
                    jorat_resualt = py.alert(text=f'{random_jorat_input}', title='Jorat action')
                else :
                    random_haghighat_input = random.choice(haghighat_list)
                    haghighat_resualt = py.alert(text=f'{random_haghighat_input}', title='Haghighat action')

            finish_jorat_haghighat = py.alert(text='Game is finished', title='Jorat_Haghighat panel')

        menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])



    elif menu_game_panel == 'Mouse_Movement' :
        number_played_games += 1

        screen_size_x, screen_size_y = py.size()

        half_screen_size_x = screen_size_x / 2
        half_screen_size_y = screen_size_y / 2


        welcome_Mouse_Movement_panel = py.confirm(text='Welcome to guess movement game, Ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
        while welcome_Mouse_Movement_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_Mouse_Movement_panel = py.confirm(text='Welcome to guess movement game, Ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
            else :
                canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        else:
            all_round_game = int(py.prompt(text=f'After start, you have 2 second to select a point \nHow many rounds do you want to play ? \n', title='Round number panel'))

        round_win = 0
        round_game_played = 0
        while round_game_played < all_round_game :
            random_screen_size_x = random.randint(0, screen_size_x)
            random_screen_size_y = random.randint(0, screen_size_y)
            time.sleep(1.5)
            user_click_x, user_click_y = py.position()

            round_game_played += 1
            if user_click_x <= half_screen_size_x and user_click_y <= half_screen_size_y :        #up_left
                if random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select up and left \ncomputer select up and left', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :     #down_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and left \ncomputer select down and left', title='Mouse movement game')     
                elif random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :    #up_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and left \ncomputer select up and right', title='Mouse movement game')     
                else : #random_screen_size_x >= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and left \ncomputer select down and right', title='Mouse movement game')     

            elif user_click_x <= half_screen_size_x and user_click_y >= half_screen_size_y :        #down_left
                if random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :   
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select down and left \ncomputer select down and left', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :     #up_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and left \ncomputer select up and left', title='Mouse movement game')     
                elif random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :    #up_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and left \ncomputer select up and right', title='Mouse movement game')     
                else : #random_screen_size_x >= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and left \ncomputer select down and right', title='Mouse movement game')     

            elif user_click_x >= half_screen_size_x and user_click_y <= half_screen_size_y :        #up_right
                if random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :   
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select up and right \ncomputer select up and right', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :     #up_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and right \ncomputer select up and left', title='Mouse movement game')     
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and right \ncomputer select down and left', title='Mouse movement game')     
                else :     #down_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and right \ncomputer select down and right', title='Mouse movement game')     

            else : #user_click_x >= half_screen_size_x and user_click_y >= half_screen_size_y :        #down_right
                if random_screen_size_x >= half_screen_size_x and random_screen_size_y >= half_screen_size_y :   
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select down and right \ncomputer select down and right', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :     #up_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and right \ncomputer select up and left', title='Mouse movement game')     
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and right \ncomputer select down and left', title='Mouse movement game')     
                else : #random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :    #up_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and right \ncomputer select up and right', title='Mouse movement game')     
        else :
            if round_win > (round_game_played / 2) :
                finally_result_point = py.alert(text=f'Finally result {username} win the game \nWin {round_win} round \nLose {round_game_played - round_win} round ', title='result Mouse movement game')     
            elif round_win < (round_game_played / 2) :
                finally_result_point = py.alert(text=f'Finally result {username} lose the game \nWin {round_win} round \nLose {round_game_played - round_win} round', title='result Mouse movement game')     
            else :
                finally_result_point = py.alert(text=f'Finally result {username} draw the game \nWin {round_win} round \nLose {round_game_played - round_win} round', title='result Mouse movement game')     
            
            menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


    elif menu_game_panel == 'Exit' :
        canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
        while canceling == 'No' :
            menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
        else :
            canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break
    

else :
    stop_free_game = py.alert(text='Sorry üòì for stopying the game \nYou can just play 2 free games \nfor buying unlimited version check "Details" \nEmail üìß : milad.baroun@gmail.com \nPhone number üìû : +989177719601', title='Finish game :(')     

      





##################################################################################################
#################################################################################################

import pyautogui as py
import random
import time

# ŸÖÿ™ÿ∫€åÿ±Ÿáÿß Ÿà ÿØÿßÿØŸá Ÿáÿß€å ÿ®ÿßÿ≤€å
confirmation_rulls_game = 0
confirmation_details = 0
number_played_games = 0

all_bot_name = ['Milad', 'Misaq', 'Abas', 'Mohammad', 'Aida', 'Neda', 'Sepideh', 'Mahsa'] 
action = ['‚úä', '‚úã', '‚úåÔ∏è']
user_1 = 0
user_2 = 0
bot_1 = 0
bot_2 = 0
number_played_Rock_Paper_Scissors = 0
save_password_to_play = False
number_played_games = 0


# ŸæŸÜŸÑ ÿÆŸàÿ¥ÿßŸÖÿØ⁄ØŸà€å€å    
welcome_panel = py.confirm(text='                Welcome to the game, before playing \nplease read both of the "Rulls" game and "Details" to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])

# ÿπÿ®Ÿàÿ± ÿßÿ≤ ŸÖŸÜŸà ÿÆŸàÿ¥ÿßŸÖÿØ⁄ØŸà€å€å ÿ®Ÿá ÿ¥ÿ±ÿ∑ ŸÖÿ∑ÿßŸÑÿπŸá ÿØŸà ⁄Øÿ≤€åŸÜŸá
while confirmation_rulls_game < 1 or confirmation_details < 1 :

# ÿØ⁄©ŸÖŸá ŸÖŸÜŸà
    if welcome_panel == 'Menu game' :
        alert_before_welcome_panel = py.alert(text='You have not read "Rulls game" and "Details" \nplease read and then click on Menu game', title='Welcome panel')
        welcome_panel = py.confirm(text='please read both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
    # ÿØ⁄©ŸÖŸá ŸÇŸàÿßŸÜ€åŸÜ ⁄Ø€åŸÖ
    elif welcome_panel == 'Rulls game' :
        rulls_game_panel = py.confirm(text='Rull of the game: \n1. Playing the games means you have accepted the complete rules of the game \n2. When your opponent is a robot, his movement is chosen by chance and you have to accept the result \n3. If you make a change in the source code of the game, this is cheating and you will lose the game \n4. During the game, two users should not show each other their next move to the opponent \n5. If you quit the game, your opponent will win the game \n6.this version of game is free so you can play just 2 games \n7.for buying full version check "Details" to see communication ways', title='Rulls game panel', buttons=['I agree', 'I dont agree'])
        if rulls_game_panel == 'I agree' :
            confirmation_rulls_game += 1
            welcome_panel = py.confirm(text='Thanks for reading "Rulls" game \nif you dont read "Details" game yet \nread and click on Menu game to start', title='Rulls game panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
        elif rulls_game_panel == 'I dont agree' :
            quit_panel = py.confirm(text='If you want to play read the "Rulls" and "Details" \nIf you dont agree quit the game and click on Exit', title='Rulls game panel', buttons=['Back', 'Exit'])
            if quit_panel == 'Back' :
                welcome_panel = py.confirm(text='Welcome to the game, before play please read \n     both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
            else :
                quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
                if quit_panel == 'No' :
                    welcome_panel = py.confirm(text='Welcome to the game, before play please read \n     both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
                else :
                    quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                    break
    # ÿØ⁄©ŸÖŸá ÿ¨ÿ≤ÿ¶€åÿßÿ™    
    elif welcome_panel == 'Details' :
        confirmation_details += 1
        details_game_panel = py.alert(text='This package game produced by Milad Barouni \nBuying and the Ways of communication : \nby Email : milad.baroun@gmail.com \nPhone number : +989177719601', title='Details panel')
        welcome_panel = py.confirm(text='Thanks for reading "details" game \nif you dont read "rulls" game yet \nread and click on Menu game to start', title='Details game panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
    # ÿØ⁄©ŸÖŸá ÿØ€åÿ™€åŸÑ    
    elif welcome_panel == 'Exit' :
        quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
        if quit_panel == 'No' :
            welcome_panel = py.confirm(text='Welcome to the game, before play please read \n     both of the Rulls game and Details to start', title='Welcome panel', buttons=['Menu game', 'Rulls game', 'Details', 'Exit'])
        else :
            quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break
# ÿØ⁄©ŸÖŸá ÿÆÿ±Ÿàÿ¨    
else :
    welcome_panel = py.confirm(text='Thanks for reading', title='Welcome panel', buttons=['Menu game', 'Set password', 'Exit'])
    while welcome_panel == 'Exit' :
        quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
        if quit_panel == 'No' :
            welcome_panel = py.confirm(text='Thanks for reading', title='Welcome panel', buttons=['Menu game', 'Set password', 'Exit'])
        else :
            quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break
    # ÿØ⁄©ŸÖŸá ⁄Øÿ∞ÿßÿ¥ÿ™ŸÜ Ÿæÿ≥Ÿàÿ±ÿØ ÿ®ÿ±ÿß€å ÿ®ÿßÿ≤€å
    if welcome_panel == 'Set password' :
        password_login = py.prompt(text='Enter your password', title='Password panel')
        password_login_repeat = py.prompt(text='Repeat enter your password', title='Password panel')
        while password_login != password_login_repeat :
            password_login = py.prompt(text='Your password not same enter again', title='Password panel')
            password_login_repeat = py.prompt(text='Repeat enter your password', title='Password panel')

        password_login_input = py.prompt(text='         Your password is set \nTo continue enter your password', title='Password panel')
        password_wrong = 0
# ŸÖÿ≠ÿØŸàÿØ€åÿ™ Ÿàÿßÿ±ÿØ ⁄©ÿ±ÿØŸÜ ÿ≥Ÿá ÿ®ÿßÿ± ÿ±ŸÖÿ≤ ÿßÿ¥ÿ™ÿ®ÿßŸá 
        while password_login != password_login_input :
            password_wrong += 1
            if password_wrong < 3 :
                password_login_input = py.prompt(text='      Wrong password \nEnter your password again', title='Password panel')
            else :
                quit_panel = py.alert(text='You entered wrong password 3 times \n        We wish see you later again', title='Quit panel')
                break
        if password_login == password_login_input :
            # ⁄Øÿ≤€åŸÜŸá ÿ∞ÿÆ€åÿ±Ÿá ÿ≥ÿßÿ≤€å Ÿæÿ≥Ÿàÿ±ÿØ €åÿß ÿπÿØŸÖ ÿ∞ÿÆ€åÿ±Ÿá ÿ≥ÿßÿ≤€å Ÿæÿ≥Ÿàÿ±ÿØ        
            save_password = py.confirm(text='Do you want to save your password ', title='Welcome panel', buttons=['Yes', 'No'])   
            if save_password == 'Yes' :
                save_password_to_play = True
                welcome_panel = py.confirm(text='You logged in', title='Welcome panel', buttons=['Menu game', 'Exit'])
                while welcome_panel == 'Exit' :
                    quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
                    if quit_panel == 'No' :
                        welcome_panel = py.confirm(text='You logged in', title='Welcome panel', buttons=['Menu game', 'Exit'])
                    elif quit_panel == 'Yes' :
                        quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                        break
            elif save_password == 'No' :
                welcome_panel = py.confirm(text='You logged in', title='Welcome panel', buttons=['Menu game', 'Exit'])
                while welcome_panel == 'Exit' :
                    quit_panel = py.confirm(text='Are you sure to quit ? ', title='Quit panel', buttons=['Yes', 'No'])
                    if quit_panel == 'No' :
                        welcome_panel = py.confirm(text='You logged in', title='Welcome panel', buttons=['Menu game', 'Exit'])
                    elif quit_panel == 'Yes' :
                        quit_panel = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                        break
username = py.prompt(text='First enter your name please', title='Name panel') 

# ÿ≠ÿ™ŸÖÿß ÿ®ÿß€åÿØ ŸÜÿßŸÖ ⁄©ÿßÿ±ÿ®ÿ±€å Ÿàÿßÿ±ÿØ ÿ¥ŸàÿØ
while not username :                                                                                                    
        canceling = py.confirm(text='An error has occurred, this error may be due to exiting the program or due to not entering the name', title='Unknow error panel', buttons=['Enter a name', 'Exit'])
        if canceling == 'Enter a name' :
            username = py.prompt(text='First enter your name please', title='Name panel')
        else :
            canceling_2 = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break    
else :
    thanks_user = py.alert(text=f'click "Ok" to start the game', title=f'{username} panel')

# ŸÖŸÜŸà ÿ®ÿßÿ≤€å Ÿáÿß
menu_game_panel = py.confirm(text=f'{username} Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

# ÿ¥ÿ±ÿ∑ ÿ±ÿß€å⁄ØÿßŸÜ ÿ®ŸàÿØŸÜ ÿ®ÿßÿ≤€å ÿ®ÿ±ÿß€å ÿßÿ¨ÿ±ÿß€å ŸÅŸÇÿ∑ ÿØŸà ÿ®ÿßÿ≤€å
while number_played_games < 2 : 
# ÿØ⁄©ŸÖŸá ÿ™ÿ∫€å€åÿ± ŸÜÿßŸÖ ⁄©ÿßÿ±ÿ®ÿ±€å
    if menu_game_panel == 'Change username' :
        username = py.prompt(text=f'{username} Enter your new username please', title='New username panel') 
        while not username :                                                                                                    
            canceling = py.confirm(text='An error has occurred, this error may be due to exiting the program or due to not entering the name', title='Unknow error panel', buttons=['Enter a name', 'Exit'])
            if canceling == 'Enter a name' :
                username = py.prompt(text=f'{username} Enter your new name please', title='New name panel') 
            else :
                canceling_2 = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break    
        else :
            menu_game_panel = py.confirm(text=f'{username} Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
# ÿ®ÿßÿ≤€å ÿ≥ŸÜ⁄Ø _ ⁄©ÿßÿ∫ÿ∞ _ ŸÇ€å⁄Ü€å
    elif menu_game_panel == '‚úä_‚úã_‚úåÔ∏è' :
        
        number_played_games += 1
        welcome_Rock_Paper_Scissors_panel = py.confirm(text='Welcome to ‚úä_‚úã_‚úåÔ∏è game, ready to start ?', title='Welcome ‚úä_‚úã_‚úåÔ∏è panel ', buttons=['Yes', 'No'])
        while welcome_Rock_Paper_Scissors_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_Rock_Paper_Scissors_panel = py.confirm(text='Welcome to ‚úä_‚úã_‚úåÔ∏è game, Are you ready to start ?', title='Welcome ‚úä_‚úã_‚úåÔ∏è panel ', buttons=['Yes', 'No'])
            else :
                canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        else:
            which_game_Rock_Paper_Scissors = py.confirm(text='which game do you want ?', title='select game panel', buttons=['üë´ - üëΩ', 'üëΩ - üëΩ', 'üë´ - üë´', 'Exit'])
# ÿ™ÿπ€å€åŸÜ ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ÿ®ÿßÿ≤€å
# ŸÖÿ¥ÿÆÿµ ÿ¥ÿØŸÜ ÿ®ÿ±ŸÜÿØŸá ÿ®Ÿá ÿØŸà ÿ±Ÿàÿ¥ ÿßŸÜÿ™ÿÆÿßÿ®€å
        round_number = int(py.prompt(text='How many round do you want to play ?', title='round panel', default='How many round'))
        How_determine_winner = py.confirm(text='How to determine the winner ?', title='Determine panel', buttons=['Whoever reaches the entry number', 'Only play the entry number'])
        # ÿ®ÿßÿ≤€å ÿ±ÿ®ÿßÿ™ ÿ®ÿß ÿßŸÜÿ≥ÿßŸÜ            
        if which_game_Rock_Paper_Scissors == 'üë´ - üëΩ' :
            random_bot_name_1 = random.choice(all_bot_name)
            bot_name = py.alert(text=f'Robot name is {random_bot_name_1}', title='üë´ - üëΩ panel')
            # ⁄Øÿ≤€åŸÜŸá Ÿáÿ±⁄©ÿ≥ ÿ®Ÿá ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ⁄ØŸÅÿ™Ÿá ÿ¥ÿØŸá ÿ®ÿ±ÿ≥ÿØ
            if How_determine_winner == 'Whoever reaches the entry number' :
                while user_1 < round_number and bot_1 < round_number :
                    random_action = random.choice(action)
                    which_game = py.confirm(text=f'{username} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    number_played_Rock_Paper_Scissors += 1
                    if which_game == random_action :
                        user_1 += 1
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    elif ( which_game == '‚úã' and random_action == '‚úä' ) or ( which_game == '‚úä' and random_action == '‚úåÔ∏è' ) or ( which_game == '‚úåÔ∏è' and random_action == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You win \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    else :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You lose \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                
                if user_1 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_1 == round_number  and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} get max score üëø \nYou lose all round üò®', title='Finally result')
                else :
                    if user_1 > bot_1 :
                        finally_resualt = py.alert(text=f'{username} you win the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username} you lose the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'{username} the game is equal, Full resualt : {user_1} - {bot_1}', title='Finally result')
                                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

# ⁄Øÿ≤€åŸÜŸá ÿ®ÿßÿ≤€å ⁄©ÿ±ÿØŸÜ ÿ®Ÿá ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ⁄ØŸÅÿ™Ÿá ÿ¥ÿØŸá
            else :
                while number_played_Rock_Paper_Scissors < round_number :
                    which_game = py.confirm(text=f'{username} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    random_action = random.choice(action)
                    number_played_Rock_Paper_Scissors += 1
                    if which_game == random_action :
                        user_1 += 1
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    elif ( which_game == '‚úã' and random_action == '‚úä' ) or ( which_game == '‚úä' and random_action == '‚úåÔ∏è' ) or ( which_game == '‚úåÔ∏è' and random_action == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You win \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                    else :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} You lose \n{random_bot_name_1} selected {random_action} \n {username} : {user_1} \n {random_bot_name_1} : {bot_1}', title='üë´ - üëΩ panel')
                
                # ÿßŸÖÿ™€åÿßÿ≤ ⁄©ÿßŸÖŸÑ ⁄Øÿ±ŸÅÿ™ŸÜ ÿØÿ± ÿ®ÿßÿ≤€å ÿ≥⁄Ø ⁄©ÿßÿ∫ÿ∞ ŸÇ€å⁄Ü€å    
                if user_1 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_1 == round_number and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} get max score üëø \nYou lose all round üò®', title='Finally result')
                else :
                    if user_1 > bot_1 :
                        finally_resualt = py.alert(text=f'{username} you win the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username} you lose the game, Full resualt : {user_1} - {bot_1}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'{username} the game is equal, Full resualt : {user_1} - {bot_1}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
        # ÿßŸÜÿ≥ÿßŸÜ ÿ®ÿß ÿßŸÜÿ≥ÿßŸÜ
        elif which_game_Rock_Paper_Scissors == 'üë´ - üë´' :  
            username_1 = py.prompt(text='enter the first name player please', title='Name panel', default='first name player')
            username_2 = py.prompt(text='enter the second name player please', title='Name panel', default='second name player')
            # ⁄Øÿ≤€åŸÜŸá Ÿáÿ±⁄©ÿ≥ ÿ®Ÿá ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ⁄ØŸÅÿ™Ÿá ÿ¥ÿØŸá ÿ®ÿ±ÿ≥ÿØ                
            if How_determine_winner == 'Whoever reaches the entry number' :
                while user_1 < round_number and user_2 < round_number :
                    which_game_1 = py.confirm(text=f'{username_1} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    which_game_2 = py.confirm(text=f'{username_2} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    number_played_Rock_Paper_Scissors += 1
                    if which_game_1 == which_game_2 :
                        user_1 += 1
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1}  \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    elif ( which_game_1 == '‚úã' and which_game_2 == '‚úä' ) or ( which_game_1 == '‚úä' and which_game_2 == '‚úåÔ∏è' ) or ( which_game_1 == '‚úåÔ∏è' and which_game_2 == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_1} win \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1} \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    else :
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_2} win \n{username_2} selected {which_game_2} \n{username_1} selected {which_game_1} \n{username_2} {user_2} \n{username_1} {user_1}', title='üë´ - üë´ panel')

                if user_1 == round_number and user_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_1} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif user_2 == round_number and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_2} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if user_1 > user_2 :
                        finally_resualt = py.alert(text=f'{username_1} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username_2} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {user_1} - {user_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
            # ⁄Øÿ≤€åŸÜŸá ÿ®ÿßÿ≤€å ⁄©ÿ±ÿØŸÜ ÿ®Ÿá ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ⁄ØŸÅÿ™Ÿá ÿ¥ÿØŸá
            else :
                while number_played_Rock_Paper_Scissors < round_number :
                    which_game_1 = py.confirm(text=f'{username_1} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    which_game_2 = py.confirm(text=f'{username_2} which action do you want to select ?', title='select action panel', buttons=['‚úä', '‚úã', '‚úåÔ∏è'])
                    number_played_Rock_Paper_Scissors += 1
                    if which_game_1 == which_game_2 :
                        user_1 += 1
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1}  \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    elif ( which_game_1 == '‚úã' and which_game_2 == '‚úä' ) or ( which_game_1 == '‚úä' and which_game_2 == '‚úåÔ∏è' ) or ( which_game_1 == '‚úåÔ∏è' and which_game_2 == '‚úã' ) :
                        user_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_1} win \n{username_1} selected {which_game_1} \n{username_2} selected {which_game_2} \n{username_1} {user_1} \n{username_2} {user_2}', title='üë´ - üë´ panel')
                    else :
                        user_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {username_2} win \n{username_2} selected {which_game_2} \n{username_1} selected {which_game_1} \n{username_2} {user_2} \n{username_1} {user_1}', title='üë´ - üë´ panel')

                if user_1 == round_number and user_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_1} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                elif user_2 == round_number and user_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{username_2} Great üíØ \nYou get max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if user_1 > user_2 :
                        finally_resualt = py.alert(text=f'{username_1} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    elif user_1 < bot_1 :
                        finally_resualt = py.alert(text=f'{username_2} you win the game, Full resualt : {user_1} - {user_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {user_1} - {user_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

        # ÿ±ÿ®ÿßÿ™ ÿ®ÿß ÿ±ÿ®ÿßÿ™
        elif which_game_Rock_Paper_Scissors == 'üëΩ - üëΩ' :
            random_bot_name_1 = random.choice(all_bot_name)
            bot_name_1 = py.alert(text=f'First Robot name is {random_bot_name_1}', title='üëΩ - üëΩ panel')
            random_bot_name_2 = random.choice(all_bot_name)

            while random_bot_name_1 == random_bot_name_2 :
                random_bot_name_2 = random.choice(all_bot_name)
          
            bot_name_2 = py.alert(text=f'Second Robot name is {random_bot_name_2}', title='üëΩ - üëΩ panel')
            # ÿ≥ŸÜ⁄Ø ⁄©ÿßÿ∫ÿ∞ ŸÇ€å⁄Ü€å Ÿà ⁄Øÿ≤€åŸÜŸá Ÿáÿ±⁄©ÿ≥ ÿ®Ÿá ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ⁄ØŸÅÿ™Ÿá ÿ¥ÿØŸá ÿ®ÿ±ÿ≥ÿØ                
            if How_determine_winner == 'Whoever reaches the entry number' :
                while bot_1 < round_number and bot_2 < round_number :
                    random_action_1 = random.choice(action)
                    random_action_2 = random.choice(action)
                    number_played_Rock_Paper_Scissors += 1
                    if random_action_1 == random_action_2 :
                        bot_1 += 1
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n{random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    elif ( random_action_1 == '‚úã' and random_action_2 == '‚úä' ) or ( random_action_1 == '‚úä' and random_action_2 == '‚úåÔ∏è' ) or ( random_action_1 == '‚úåÔ∏è' and random_action_2 == '‚úã' ) :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_1} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n{random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    else :
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_2} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n{random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                if bot_1 == round_number and bot_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_2 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_2} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if bot_1 > bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_1} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    elif bot_1 < bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_2} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
            # ÿ≥ŸÜ⁄Ø ⁄©ÿßÿ∫ÿ∞ ŸÇ€å⁄Ü€å Ÿà ⁄Øÿ≤€åŸÜŸá ÿ®ÿßÿ≤€å ⁄©ÿ±ÿØŸÜ ÿ®Ÿá ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ⁄ØŸÅÿ™Ÿá ÿ¥ÿØŸá
            else :
                while number_played_Rock_Paper_Scissors < round_number :
                    random_action_1 = random.choice(action)
                    random_action_2 = random.choice(action)
                    number_played_Rock_Paper_Scissors += 1
                    if random_action_1 == random_action_2 :
                        bot_1 += 1
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} is equal \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n {random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    elif ( random_action_1 == '‚úã' and random_action_2 == '‚úä' ) or ( random_action_1 == '‚úä' and random_action_2 == '‚úåÔ∏è' ) or ( random_action_1 == '‚úåÔ∏è' and random_action_2 == '‚úã' ) :
                        bot_1 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_1} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n {random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                    else :
                        bot_2 += 1
                        resualt_game = py.alert(text=f'round {number_played_Rock_Paper_Scissors} {random_bot_name_2} win the game \n{random_bot_name_1} selected {random_action_1} \n{random_bot_name_2} selected {random_action_2} \n {random_bot_name_1} {bot_1} \n{random_bot_name_2} {bot_2}', title='üëΩ - üëΩ panel')
                if bot_1 == round_number and bot_2 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_1} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                elif bot_2 == round_number and bot_1 == 0 :
                    finally_max_score_resualt = py.alert(text=f'{random_bot_name_2} Great üíØ \nget max score \n{round_number}/{round_number}', title='Finally result')
                else :
                    if bot_1 > bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_1} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    elif bot_1 < bot_2 :
                        finally_resualt = py.alert(text=f'{random_bot_name_2} win the game, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                    else :
                        finally_resualt = py.alert(text=f'The game is equal, Full resualt : {bot_1} - {bot_2}', title='Finally result')
                
                menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

    # ÿ®ÿßÿ≤€å ÿ≠ÿØÿ≥ ÿπÿØÿØ
    elif menu_game_panel == 'Guess_number' :
        number_played_games += 1
        rounds = 1
        len_str_number = ''
        # ÿπÿØÿØ ÿ±ÿßŸÜÿØŸàŸÖ ⁄ÜŸÜÿØ ÿ±ŸÇŸÖ€å ÿ®ÿßÿ¥Ÿá
        how_many_len = int(py.prompt(text='Welcome to Guess number \nHow many digits is the selected number ?', title='Entery len number'))
        #ÿπÿØÿØ Ÿàÿßÿ±ÿØ ÿ¥ÿØŸá ŸÜÿ®ÿß€åÿØ ÿ®€åÿ¥ÿ™ÿ± ÿßÿ≤ 5 ÿ®ÿßÿ¥ÿØ
        while how_many_len > 5 :
            how_many_len = int(py.prompt(text='Your digits number must be lower than 5 ,enter digits the number again ?', title='Entery len number'))
        # ÿ™ÿπÿØÿßÿØ ÿ±ÿßŸÜÿØ ÿ®ÿßÿ≤€å
        how_many_round = int(py.prompt(text='How many rounds do you want to try your luck ?', title='Entery round number'))
        # ÿ≠ŸÑŸÇŸá ŸÅŸàÿ± ÿ®ÿ±ÿß€å ⁄ÜŸÜÿØ ÿ±ŸÇŸÖ€å ÿ®ŸàÿØŸÜ ÿπÿØÿØ ÿ±ÿßŸÜÿØŸàŸÖ
        for i in range(how_many_len) :
            len_str_number += '9'
            len_int_number = int(len_str_number)

        random_number = random.randint(1, len_int_number + 1)
        # ÿ≠ÿØÿ≥ ÿ≤ÿØŸÜ ÿπÿØÿØ ÿ™Ÿàÿ≥ÿ∑ ⁄©ÿßÿ±ÿ®ÿ±
        entry_random_number = int(py.prompt(text=f'guess and enter your random number', title='Entery random number'))

        while rounds < how_many_round :
            rounds += 1
            if entry_random_number == random_number :
                entry_random_number = py.alert(text=f'üíØüíØüíØ great üíØüíØüíØ \n{entry_random_number} is the currect number', title='Win panel')
                win_alert = py.alert(text=f'congratulations, you win the game in {rounds - 1} rounds ', title='Win panel')
                break
            elif entry_random_number > random_number :
                entry_random_number = int(py.prompt(text=f'{entry_random_number} is bigger than real number \nguess again and enter another number \nRound {rounds}/{how_many_round}, ', title='Entery random number'))
            else : 
                entry_random_number = int(py.prompt(text=f'{entry_random_number} is lower than real number \nguess again and enter another number \nRound {rounds}/{how_many_round}', title='Entery random number'))
        else: 
            lose_alert = py.alert(text=f'Your chance is finished \nyou lose the game \nComputer number was {random_number}', title='Lose panel')

        menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
    # ÿ®ÿßÿ≤€å ⁄ØŸÑ €åÿß ŸæŸà⁄Ü
    elif menu_game_panel == 'Gol_ya_Pooch' :   
        number_played_games += 1
        user_gol_ya_pooch = 0
        bot_gol_ya_pooch = 0
        name_box = ['Box 1', 'Box 2']
        welcome_panel = py.confirm(text='Welcome to Gol_ya_Pooch game, Are you ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
        while welcome_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_panel = py.confirm(text='Welcome to Gol_ya_Pooch game, Are you ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
            else :
                canceling_2 = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        
        how_many_round = int(py.prompt(text='How many rounds do you want to try your luck ?', title='Entery round number'))
        round_game_played = 0
        while round_game_played < how_many_round : 
            random_name_box = random.choice(name_box)
            Gol_ya_Pooch_panel = py.confirm(text='Select one of the box ?', title='Gol_ya_Pooch panel', buttons=['Box 1', 'Box 2'])

            round_game_played += 1
            if Gol_ya_Pooch_panel == random_name_box :
                resualt_Gol_ya_Pooch_game = py.alert(text=f'round {round_game_played}/{how_many_round} , Resualt : You win', title='Gol_ya_Pooch panel')
                user_gol_ya_pooch += 1
            else :
                resualt_Gol_ya_Pooch_game = py.alert(text=f'round {round_game_played}/{how_many_round} , Resualt : You lose', title='Gol_ya_Pooch panel')
                bot_gol_ya_pooch += 1

        all_result_gol_ya_pooch = py.alert(text=f'All result : \n{username} {user_gol_ya_pooch} \nRobot {bot_gol_ya_pooch}', title='Result panel')

        menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


    # ÿ®ÿßÿ≤€å ÿ¨ÿ±ÿ¶ÿ™ Ÿà ÿ≠ŸÇ€åŸÇÿ™   
    elif menu_game_panel == 'Jorat_Haghighat' :
        number_played_games += 1
        round_game_played = 0
        jorat_list = ['Kole direct inestat ro neshon bede', 'Dad bezan bego man divoonam', 'Be sorat random be yeki az mokhatabat zang bezan bego dooset daram', 'Ye sandewich be hesab khodet sefaresh bede', 'Az inja ta park tv piade boro', 'Ye music ke doos dari ba sedaye boland bekhon']
        haghighat_list = ['Chandbar ashegh shodi ?', 'Bozorg tarin razet chie ?', 'Ajibtarin adati ke dari chie ?', 'Age ye rooz omr koni chi kar tooye on rooz mikoni ?', 'Age mitonesi chizi ro toye sooratet taghir bedi chi bood ?']

        welcome_Jorat_Haghighat_panel = py.confirm(text='Welcome to Jorat_Haghighat game, Ready to start üëÄ ?', title='Welcome panel', buttons=['Yes', 'No'])
        while welcome_Jorat_Haghighat_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_Jorat_Haghighat_panel = py.confirm(text='Welcome to Jorat_Haghighat game, Ready to start üëÄ ?', title='Welcome panel', buttons=['Yes', 'No'])
            else :
                canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        else:
            username_1 = py.prompt(text='enter the first name please please', title='Name panel', default='first name player')
            username_2 = py.prompt(text='enter the second name player please', title='Name panel', default='second name player')
            how_many_round = int(py.prompt(text='How many rounds do you want to play ?', title='Entery round number'))
            while round_game_played < how_many_round :
                round_game_played += 1
                welcome_Jorat_Haghighat_panel = py.confirm(text=f'{username_1} Select one of the box', title='Jorat_Haghighat panel', buttons=['Jorat', 'Haghighat'])
                if welcome_Jorat_Haghighat_panel == 'Jorat' :
                    random_jorat_input = random.choice(jorat_list)
                    jorat_resualt = py.alert(text=f'{random_jorat_input}', title='Jorat action')
                else :
                    random_haghighat_input = random.choice(haghighat_list)
                    haghighat_resualt = py.alert(text=f'{random_haghighat_input}', title='Haghighat action')

                welcome_Jorat_Haghighat_panel = py.confirm(text=f'{username_2} Select one of the box', title='Jorat_Haghighat panel', buttons=['Jorat', 'Haghighat'])
                if welcome_Jorat_Haghighat_panel == 'Jorat' :
                    random_jorat_input = random.choice(jorat_list)
                    jorat_resualt = py.alert(text=f'{random_jorat_input}', title='Jorat action')
                else :
                    random_haghighat_input = random.choice(haghighat_list)
                    haghighat_resualt = py.alert(text=f'{random_haghighat_input}', title='Haghighat action')

            finish_jorat_haghighat = py.alert(text='Game is finished', title='Jorat_Haghighat panel')

        menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])


    # ÿ®ÿßÿ≤€å ÿ¨ÿßÿ®ÿ¨ÿß€å€å ŸÖŸàÿ≥ Ÿà ÿ≠ÿØÿ≥ ÿ≤ÿØŸÜ ŸÖ⁄©ÿßŸÜ ŸÖŸàÿ≥ ÿØÿ± €å⁄©€å ÿßÿ≤ ⁄ÜŸáÿßÿ± ŸÇÿ≥ŸÖÿ™ ŸÖÿßŸÜ€åÿ™Ÿàÿ±
    elif menu_game_panel == 'Mouse_Movement' :
        number_played_games += 1
        #ŸÖÿ¥ÿÆÿµ ÿ¥ÿØŸÜ ŸÖŸÇÿßÿØ€åÿ± ÿß€å⁄©ÿ≥ Ÿà Ÿàÿß€å
        screen_size_x, screen_size_y = py.size()
        # ÿ™ŸÇÿ≥€åŸÖ ÿ®Ÿá 2 ⁄©ÿ±ÿØŸÜ ŸÖŸÇÿßÿØ€åÿ±
        half_screen_size_x = screen_size_x / 2
        half_screen_size_y = screen_size_y / 2


        welcome_Mouse_Movement_panel = py.confirm(text='Welcome to guess movement game, Ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
        while welcome_Mouse_Movement_panel == 'No' :
            canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
            if canceling == 'No' :
                welcome_Mouse_Movement_panel = py.confirm(text='Welcome to guess movement game, Ready to start ?', title='Welcome panel', buttons=['Yes', 'No'])
            else :
                canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
                break
        else:
            all_round_game = int(py.prompt(text=f'After start, you have 2 second to select a point \nHow many rounds do you want to play ? \n', title='Round number panel'))

        round_win = 0
        round_game_played = 0
        while round_game_played < all_round_game :
            random_screen_size_x = random.randint(0, screen_size_x)
            random_screen_size_y = random.randint(0, screen_size_y)
            time.sleep(1.5)
            user_click_x, user_click_y = py.position()

            round_game_played += 1
            if user_click_x <= half_screen_size_x and user_click_y <= half_screen_size_y :        #up_left
                if random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select up and left \ncomputer select up and left', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :     #down_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and left \ncomputer select down and left', title='Mouse movement game')     
                elif random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :    #up_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and left \ncomputer select up and right', title='Mouse movement game')     
                else : #random_screen_size_x >= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and left \ncomputer select down and right', title='Mouse movement game')     

            elif user_click_x <= half_screen_size_x and user_click_y >= half_screen_size_y :        #down_left
                if random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :   
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select down and left \ncomputer select down and left', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :     #up_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and left \ncomputer select up and left', title='Mouse movement game')     
                elif random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :    #up_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and left \ncomputer select up and right', title='Mouse movement game')     
                else : #random_screen_size_x >= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and left \ncomputer select down and right', title='Mouse movement game')     

            elif user_click_x >= half_screen_size_x and user_click_y <= half_screen_size_y :        #up_right
                if random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :   
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select up and right \ncomputer select up and right', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :     #up_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and right \ncomputer select up and left', title='Mouse movement game')     
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and right \ncomputer select down and left', title='Mouse movement game')     
                else :     #down_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select up and right \ncomputer select down and right', title='Mouse movement game')     

            else : #user_click_x >= half_screen_size_x and user_click_y >= half_screen_size_y :        #down_right
                if random_screen_size_x >= half_screen_size_x and random_screen_size_y >= half_screen_size_y :   
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You win \nYou select down and right \ncomputer select down and right', title='Mouse movement game')     
                    round_win += 1
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y <= half_screen_size_y :     #up_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and right \ncomputer select up and left', title='Mouse movement game')     
                elif random_screen_size_x <= half_screen_size_x and random_screen_size_y >= half_screen_size_y :    #down_left
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and right \ncomputer select down and left', title='Mouse movement game')     
                else : #random_screen_size_x >= half_screen_size_x and random_screen_size_y <= half_screen_size_y :    #up_right
                    result_point = py.alert(text=f'Round {round_game_played}/{all_round_game} You lose \nYou select down and right \ncomputer select up and right', title='Mouse movement game')     
        else :
            if round_win > (round_game_played / 2) :
                finally_result_point = py.alert(text=f'Finally result {username} win the game \nWin {round_win} round \nLose {round_game_played - round_win} round ', title='result Mouse movement game')     
            elif round_win < (round_game_played / 2) :
                finally_result_point = py.alert(text=f'Finally result {username} lose the game \nWin {round_win} round \nLose {round_game_played - round_win} round', title='result Mouse movement game')     
            else :
                finally_result_point = py.alert(text=f'Finally result {username} draw the game \nWin {round_win} round \nLose {round_game_played - round_win} round', title='result Mouse movement game')     
            
            menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])

    # ÿØ⁄©ŸÖŸá ÿÆÿ±Ÿàÿ¨ ÿ®ÿßÿ≤€å
    elif menu_game_panel == 'Exit' :
        canceling = py.confirm(text='Are you sure to quit the game ?', title='Quit panel', buttons=['Yes', 'No'])
        while canceling == 'No' :
            menu_game_panel = py.confirm(text=f'Select one of the game', title='Game panel', buttons=['‚úä_‚úã_‚úåÔ∏è', 'Guess_number', 'Gol_ya_Pooch', 'Jorat_Haghighat', 'Mouse_Movement', 'Change username', 'Exit'])
        else :
            canceling = py.alert(text='Bye, we hope see you soon again', title='Quit panel')
            break
    
# ÿßÿ™ŸÖÿßŸÖ ÿ®ÿßÿ≤€å ÿ®ÿß ÿßŸÜÿ¨ÿßŸÖ ÿØÿßÿØŸÜ ÿØŸà ÿ®ÿßÿ≤€å ÿ±ÿß€å⁄ØÿßŸÜ
else :
    stop_free_game = py.alert(text='Sorry üòì for stopying the game \nYou can just play 2 free games \nfor buying unlimited version check "Details" \nEmail üìß : milad.baroun@gmail.com \nPhone number üìû : +989177719601', title='Finish game :(')     

      








##########################
##########################







import pyautogui
import time
import random


country_list = ['ÿßŸÜ⁄ØŸÑÿ≥ÿ™ÿßŸÜ', 'ÿ®ÿ±ÿ≤€åŸÑ', 'Ÿæÿ±ÿ™ÿ∫ÿßŸÑ', 'ÿ™ÿ±⁄©€åŸá', 'ÿ¨€åÿ®Ÿàÿ™€å', '⁄Ü⁄©', 'ÿØÿßŸÜŸÖÿßÿ±⁄©', 'ÿ±ŸàŸÖÿßŸÜ€å', 'ÿ≤€åŸÖÿ®ÿßŸàŸá', '⁄òÿßŸæŸÜ', 'ÿ≥Ÿàÿ±€åŸá', 'ÿ¥€åŸÑ€å', 'ÿµÿ±ÿ®ÿ≥ÿ™ÿßŸÜ', 'ÿπÿ±ÿßŸÇ', 'ÿ∫ŸÜÿß', 'ŸÅÿ±ÿßŸÜÿ≥Ÿá', 'ŸÇÿ∑ÿ±', '⁄©Ÿàÿ®ÿß', '⁄Øÿ±ÿ¨ÿ≥ÿ™ÿßŸÜ', 'ŸÑÿ®ŸÜÿßŸÜ', 'ŸÖÿßŸÑÿ≤€å', 'ŸÜ€åÿ¨ÿ±€åŸá', 'Ÿà€åÿ™ŸÜÿßŸÖ', 'ŸáŸÜÿØ', '€åŸÖŸÜ']
animal_list = ['ÿßÿ≥ÿ®', 'ÿ®ÿ≤', 'ŸæÿßŸÜÿØÿß', 'ÿ∑Ÿàÿ∑€å', 'ÿ™€åŸáŸà', 'ÿ™ŸÖÿ≥ÿßÿ≠', 'ÿ≥Ÿàÿ≥⁄©', 'ÿ≥Ÿàÿ≥ŸÖÿßÿ±', 'ÿ≠ŸÑÿ≤ŸàŸÜ', 'ÿÆÿ±ÿ≥', '⁄ÜŸÑ⁄ÜŸÑŸá', 'ÿ¨Ÿàÿ¨Ÿá ÿ™€åÿ∫€å', 'ÿØÿßÿ±⁄©Ÿàÿ®', 'ÿ±ÿßÿ≥Ÿà', 'ÿ≤ÿßŸÑŸà', 'ÿ¥ÿßŸá€åŸÜ', 'ÿπŸÜ⁄©ÿ®Ÿàÿ™', 'ÿ∫Ÿà⁄©', 'ŸÇŸàÿ±ÿ®ÿßÿ∫Ÿá', 'ŸÅ€åŸÑ', '⁄©ÿßŸÜ⁄ØŸàÿ±Ÿà', '⁄ØŸàÿ≥ŸÅŸÜÿØ', 'ŸÖÿßÿ±', 'ŸÑÿß⁄© Ÿæÿ¥ÿ™', 'ŸÜŸáŸÜ⁄Ø', 'ŸàÿßŸÑ', 'ŸáÿØŸáÿØ', '€åŸàÿ≤ŸæŸÑŸÜ⁄Ø']
object_list = ['ÿßŸÜÿ™ŸÜ', 'ÿ®ÿßÿØ⁄©ŸÜ⁄©', 'Ÿæÿ±ÿØŸá', 'ÿ™ÿßŸÜ⁄©', 'ÿ≥ÿßÿπÿ™', 'ÿµÿßÿ®ŸàŸÜ', 'ÿ≠ŸàŸÑŸá', 'ÿ¨ÿßÿ±Ÿà', '⁄ÜŸÜ⁄ØÿßŸÑ', 'ÿØŸÜÿØÿßŸÜ', 'ÿ±ÿßÿØ€åŸà', 'ÿ≤ŸÜ⁄Ø', 'ÿ∂ÿØ ÿ≤ŸÜ⁄Ø','ÿ¥ŸÑŸàÿßÿ±⁄©', 'ÿπÿ±ŸÇ', 'ŸÇÿß€åŸÇ', 'ŸÅŸÜÿ¨ÿßŸÜ', '⁄©ÿßÿØŸà', '⁄ØÿßŸàÿµŸÜÿØŸàŸÇ', 'ŸÑÿßŸÖŸæ', 'ŸÖŸàÿØŸÖ', 'ŸÜÿß€åŸÑŸàŸÜ', 'ŸÖŸàÿ≥', 'ŸáŸÜÿØŸÑ', 'Ÿà€åÿØÿ¶Ÿà']
fruits_list = ['ÿßŸÜÿ®Ÿá', 'ÿ®Ÿá', 'Ÿæÿ±ÿ™ŸÇÿßŸÑ', 'ÿ¨ŸÖÿ®Ÿà', 'ÿ≠ÿµÿ±ŸÖ', 'ÿÆ€åÿßÿ±', 'ÿØÿ≥ÿ™ŸÜÿ®Ÿà', 'ÿ∞ÿ∫ÿßŸÑ ÿßÿÆÿ™Ÿá', 'ÿ±€åŸàÿßÿ≥', 'ÿ≤ÿ±ÿØÿ¢ŸÑŸà', '⁄òÿß⁄ò', 'ÿ≥€åÿ®', 'ÿ¥ŸÅÿ™ÿßŸÑŸà', 'ÿ∑ÿßŸÑÿ®€å', 'ÿπŸÜÿßÿ®', 'ÿ∫Ÿàÿ±Ÿá', 'ŸÅŸÜÿØŸÇ', 'ŸÇ€åÿ≥€å', '⁄©€åŸà€å', '⁄Ø€åŸÑÿßÿ≥', 'ŸÑ€åŸÖŸàÿ¥€åÿ±€åŸÜ', 'ŸÖŸàÿ≤', 'ŸÜÿßÿ±⁄Ø€åŸÑ', 'ŸàŸÑ€å⁄©', 'ŸáŸÜÿØŸàÿßŸÜŸá', '€åÿßŸÅÿß']
work_lst = ['ÿßÿ¥Ÿæÿ≤€å', 'ÿ®ŸÜÿß', 'Ÿæÿ≤ÿ¥⁄©', 'ÿ™⁄©ŸÜ€åÿ≥ŸÜ', 'ÿ¨ÿ±ÿßÿ≠', '⁄Üÿ±ŸÖ ÿØŸàÿ≤', 'ÿ≠ŸàŸÑŸá ŸÅÿ±Ÿàÿ¥', 'ÿÆŸÑÿ®ÿßŸÜ', 'ÿØŸÜÿØÿßŸÜŸæÿ≤ÿ¥⁄©', 'ÿ∞ÿ∫ÿßŸÑ ŸÅÿ±Ÿàÿ¥', 'ÿ±ŸÅÿ™⁄Øÿ±', 'ÿ≤ÿ±⁄Øÿ±', 'ÿ≥ŸÖÿ≥ÿßÿ±', 'ÿ¥Ÿáÿ±ÿØÿßÿ±', 'ÿµÿßŸÅ⁄©ÿßÿ±€å', 'ÿ∑ŸÑÿßŸÅÿ±Ÿàÿ¥', 'ÿ∏ÿ±ŸÅ ÿ¥Ÿà', 'ÿπ€åŸÜ⁄©‚Äåÿ≥ÿßÿ≤', 'ÿ∫Ÿàÿßÿµ', 'ŸÅÿ±ÿ¥ ŸÅÿ±Ÿàÿ¥', 'ŸÇŸÜÿßÿØ', '⁄©€åŸÅ ŸÅÿ±Ÿàÿ¥', '⁄Øÿßÿ±ÿ≥ŸàŸÜ', 'ŸÑŸàŸÑŸá‚Äå⁄©ÿ¥', 'ŸÖ⁄©ÿßŸÜ€å⁄©', 'ŸÜÿ¨ÿßÿ±', 'Ÿàÿß⁄©ÿ≥€å', 'ŸáŸÜÿØŸàÿßŸÜŸá ŸÅÿ±Ÿàÿ¥', '€åÿØ⁄©‚Äå ŸÅÿ±Ÿàÿ¥']
x = ['sa', 'ds', 'ae']
y = ['ay', 'wt', 'er']
z = x + y
score = 0
random.shuffle(z)
# print(z)

letter = random.choice(z)[0]
print(letter)
start_time = time.time()
end_time = start_time + 3

q = random.choice(x)[0]
w =random.choice(y)[0]

while time.time() < end_time :
    xxx = pyautogui.prompt(text='aaaa', title='d',timeout=end_time)
    yyy = pyautogui.prompt(text='aaaa', title='d')
    break
yyy = pyautogui.alert(text='aaaa', title='d')

if xxx.lower() in x and xxx.lower()[0] == letter :
    score += 1

print(score)
# for i in range(10) :
#     letter = random.choice(z)[0]
#     print(letter)




# mix_lists = country_list + animal_list + object_list + fruits_list + work_lst
# random.shuffle(mix_lists)























##########################################
##########################################
##########################################






import pyautogui
import random
import time
import pymsgbox

# animals_list = ['ahjk', 'dhfd', 'syegt', 'fofdyhk', 'asb']
# animals_list_entry = []
# fruits_list = ['ayij', 'fgyhkhg', 'sdgsd', 'asia']
# fruits_list_entry = []
# mix_list = animals_list + fruits_list
# alefba = random.choice(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'])
# score = 0
# random.choice(alefba)
# random.shuffle(mix_list)
# random.choice(alefba)[0]
# alefba = 'a'

# menu_game = pyautogui.confirm(text='Name - Family Game \nIf you want to know about playin game read "Learn"', buttons=['Sart', 'Learn'])
# alert_learn = pyautogui.alert(text='dfhyfgjnghjghkujyhgkuyj', title='Learning game')
# show_all_list = pyautogui.alert(text=f'       read and save the words in your mind and when you ready start the game \n{mix_list}', title='Minding')
# random_letter = pyautogui.alert(text=f'Random letter is {alefba}', title='Random letter')
# for i in range(1, 4) :
#     animal_question = pyautogui.prompt(text=f'Enter a name of anmial by {alefba} ', title=f'Random {i}', timeout=5000)
#     if animal_question.lower() in animals_list and animal_question[0] == alefba :
#         animals_list_entry.append(animal_question)
#         score += 1

# alert_learn = pyautogui.alert(text=f'You answered right : {animals_list_entry} and score is {score}', title='Random Word')





#################################
#################################



animals_list_existence = ['asb', 'shotor', 'shir', 'zarafe', 'kangoro']
animals_list_no_existence = ['khar', 'zarafe', 'ahoo', 'fil', 'raso']
animals_list_entry = []

fruits_list_existence = ['sib', 'kivi', 'moz', 'golabi']
fruits_list_no_existence = ['khiar', 'portegal', 'toot', 'anar']
fruits_list_entry = []

random.shuffle(animals_list_existence)
random.shuffle(animals_list_no_existence)

random.shuffle(fruits_list_existence)
random.shuffle(fruits_list_no_existence)


mix_list_animals = animals_list_existence + animals_list_no_existence
random.choice(mix_list_animals)

mix_list_fruits = fruits_list_existence + fruits_list_no_existence
# random.choice(mix_list_fruits)

mix_all_list = mix_list_animals + mix_list_fruits
score = 0

menu_game = pyautogui.confirm(text='IQ Question Game \nIf you want to know about playin game read "Learn"', buttons=['Sart', 'Learn'])
alert_learn = pyautogui.alert(text='dfhyfgjnghjghkujyhgkuyj', title='Learning game')
show_all_list = pyautogui.alert(text=f'       read and save the words in your mind and when you ready start the game \n{mix_all_list}', title='Minding word')
round_game = int(pyautogui.prompt(text='How many round do you want to play ?', title='Round'))

for i in range(1, round_game + 1) :
    animal_question = pyautogui.confirm(text='Which animal was existence in list', title=f'Question', buttons=[f'{random.choice(mix_list_animals)}' ,f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}', f'{random.choice(mix_list_animals)}'])
    if animal_question.lower() in animals_list_existence :
        animals_list_entry.append(animal_question)
        score += 1
    elif animal_question.lower() in animals_list_no_existence :
        fruits_list_entry.append(animal_question)
print(animals_list_entry)
print(fruits_list_entry)

# for i in range(1, 4) :
#     animal_question = pyautogui.prompt(text=f'Enter a name of anmial by {alefba} ', title=f'Random {i}', timeout=5000)
#     print(animal_question)
# for i in range(1, 4) :
#     animal_question = pyautogui.prompt(text=f'Enter a name of anmial by {alefba} ', title=f'Random {i}', timeout=5000)
#     print(animal_question)

# alert_learn = pyautogui.alert(text=f'You answered right : {animals_list_entry} and score is {score}', title='Random Word')


# pyautogui.sleep(3)
# pyautogui.PAUSE = 2
# pyautogui.press('enter')































